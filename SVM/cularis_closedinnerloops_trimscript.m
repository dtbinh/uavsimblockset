%% Search for a specified operating point for the model - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed.
%
% This MATLAB script is the command line equivalent of the trim model
% tab in linear analysis tool with current specifications and options.
% It produces the exact same operating points as hitting the Trim button.

% MATLAB(R) file generated by MATLAB(R) 8.6 and Simulink Control Design (TM) 4.2.1.
%
% Generated on: 16-Dec-2015 20:26:09

%% Specify the model name
model = 'trimModel_Cularis_turbulentAtmosphere_innerloopsclosed';

%% Create the operating point specification object.
opspec = operspec(model);

%% Set the constraints on the states in the model.
% - The defaults for all states are Known = false, SteadyState = true,
%   Min = -Inf, and Max = Inf.

% State (1) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Dynamics with varying parameters/Trim Kinematics (euler angles)/6DoF (Euler Angles)/Calculate DCM & Euler Angles/phi theta psi
% - Default model initial conditions are used to initialize optimization.
opspec.States(1).Known = [false;false;true];
opspec.States(1).SteadyState = [false;false;false];

% State (2) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Dynamics with varying parameters/Trim Kinematics (euler angles)/6DoF (Euler Angles)/p,q,r
% - Default model initial conditions are used to initialize optimization.
opspec.States(2).Known = [true;true;true];

% State (3) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Dynamics with varying parameters/Trim Kinematics (euler angles)/6DoF (Euler Angles)/ub,vb,wb
% - Default model initial conditions are used to initialize optimization.
opspec.States(3).Known = [true;false;false];

% State (4) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Dynamics with varying parameters/Trim Kinematics (euler angles)/6DoF (Euler Angles)/xe,ye,ze
opspec.States(4).x = [-2464675.0541;-4610217.3274;3641861.6375];
opspec.States(4).Known = [true;true;true];
opspec.States(4).SteadyState = [false;false;false];

% State (5) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/First order behaviour engine
opspec.States(5).x = 0;
opspec.States(5).Known = true;

% State (6) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/First order behaviour engine1
opspec.States(6).x = 0;
opspec.States(6).Known = true;

% State (7) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Integrator
% - Default model initial conditions are used to initialize optimization.
opspec.States(7).Known = true;

% State (8) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Servo HS1/2nd order/actInt1
% - Default model initial conditions are used to initialize optimization.
opspec.States(8).Known = true;

% State (9) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Servo HS1/2nd order/actInt2
% - Default model initial conditions are used to initialize optimization.
opspec.States(9).Known = true;

% State (10) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Servo HS55/2nd order/actInt1
% - Default model initial conditions are used to initialize optimization.
opspec.States(10).Known = true;

% State (11) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/Servo HS55/2nd order/actInt2
% - Default model initial conditions are used to initialize optimization.
opspec.States(11).Known = true;

% State (12) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/lqrint
% - Default model initial conditions are used to initialize optimization.
opspec.States(12).Known = true;

%% Set the constraints on the inputs in the model.
% - The defaults for all inputs are Known = false, Min = -Inf, and
% Max = Inf.

% Input (1) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/psi_c
% - Default model initial conditions are used to initialize optimization.

% Input (2) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/den_0to1
% - Default model initial conditions are used to initialize optimization.

% Input (3) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/vw_x_mps
% - Default model initial conditions are used to initialize optimization.

% Input (4) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/vw_y_mps
% - Default model initial conditions are used to initialize optimization.

% Input (5) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/vw_z_mps
% - Default model initial conditions are used to initialize optimization.

% Input (6) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/omegaw_x_rps
% - Default model initial conditions are used to initialize optimization.

% Input (7) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/omegaw_y_rps
% - Default model initial conditions are used to initialize optimization.

% Input (8) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/omegaw_z_rps
% - Default model initial conditions are used to initialize optimization.

% Input (9) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/phi_c
% - Default model initial conditions are used to initialize optimization.

% Input (10) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/theta_c
% - Default model initial conditions are used to initialize optimization.

%% Set the constraints on the outputs in the model.
% - The defaults for all outputs are Known = false, Min = -Inf, and
% Max = Inf.

% Output (1) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/psi
% - Default model initial conditions are used to initialize optimization.

% Output (2) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/theta
% - Default model initial conditions are used to initialize optimization.

% Output (3) - trimModel_Cularis_turbulentAtmosphere_innerloopsclosed/phi
% - Default model initial conditions are used to initialize optimization.


%% Create the options
opt = findopOptions('DisplayReport','iter');

%% Perform the operating point search.
[op,opreport] = findop(model,opspec,opt);
